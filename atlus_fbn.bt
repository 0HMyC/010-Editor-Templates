//------------------------------------------------
//--- 010 Editor v11.0.1 Binary Template
//
//   File: Atlus3DFieldFBN.bt
//   Authors: Tupelov, moddaman
//   Version: 1.0
//   Purpose: Parse 3D Field *.FBN files.
//  Category: Atlus
// File Mask: *.FBN
//  ID Bytes: 
//   History: 
//------------------------------------------------

#include "types.h"

typedef enum<u16>
{
    NPCSpawnPos = 4,// Not sure but this is what I could get from my research
    NPC = 5,
} MajorType;

typedef struct(u32 Type1EntrySize)
{
    u8 UnknownBytes[4] <bgcolor = 0x00FFFF>;
    if (UnknownBytes[2] != 0x72)
        Printf("Type1Entries 0x%X - UnknownBytes[2]: %d\n", FTell() - 2, UnknownBytes[2]);
    if (UnknownBytes[3] != 1)
        Printf("Type1Entries 0x%X - UnknownBytes[3]: %d\n", FTell() - 1, UnknownBytes[3]);
    MajorType Major <name = "Major">;
    s16 Minor <name = "Minor">;
    u8 Res_ID <name = "Res ID">;
    u8 Unknown <bgcolor = 0x00FFFF>;
    u16 Field000 <bgcolor = 0x00FFFF>;
    f32 CollisRadius <name = "Collision Radius">;
    f32 UnknownFields[16] <bgcolor = 0x00FFFF>;
    f32 YPos <name = "Y Pos">;
    f32 Field019 <bgcolor = 0x00FFFF>;
    f32 XPos <name = "X Pos">;
    f32 Field021 <bgcolor = 0x00FFFF>;
    u32 ShadowType <name = "Shadow Type">;
    f32 ShadowRadius <name = "Shadow Radius">;
    u8 UnknownBytes2[8] <bgcolor = 0x00FFFF>;
    if (Type1EntrySize==320)
    {
        f32 UnknownFloats[52] <bgcolor = 0x00FFFF>;
    }
} Type1Entries <name = "Type 1 FBNEntries">;

typedef struct
{
    f32 Unknown0;
    f32 Unknown1;
    f32 Unknown2;
    f32 Unknown3;
    f32 Unknown4;
    f32 Unknown5;
    f32 Unknown6;
    f32 Unknown7;
    f32 Unknown8;
    f32 Unknown9;
    f32 Unknown10;
    f32 Unknown11;
    f32 Unknown12;
    f32 Unknown13;
} Type2Entries <name = "Type 2 FBNEntries">;

typedef struct TypeListMetadata
{
    u32 Number <comment = "Number of entries for this type">;
    u32 EntrySize <comment = "Size in bytes(?) of one entry">;
};

typedef struct TypeList
{
    TypeListMetadata Type1 <name = "Type 1 Metadata", bgcolor = 0x55BBFF>;
    TypeListMetadata Type2 <name = "Type 2 Metadata", bgcolor = 0x77DDFF>;
};

typedef struct FBNHeader
{
    u32 Magic <format=hex, bgcolor = 0x00FF00>;
    struct
    {
        u16 Major <name = "Version Major Number", bgcolor = 0xFF0000>;
        u16 Minor <name = "Version Minor Number", bgcolor = 0xFF4444>;
    } Version;
};

typedef struct FBNFile
{
    FBNHeader Header;
    TypeList EntryTypeList;
    if (EntryTypeList.Type1.Number > 0)
        Type1Entries EntryType1Data(EntryTypeList.Type1.EntrySize)[ EntryTypeList.Type1.Number ];
    if (EntryTypeList.Type2.Number > 0)
        Type2Entries EntryType2Data[ EntryTypeList.Type2.Number ];
    if (FTell() < FileSize())
        u32 Unknown[(FileSize() - FTell()) / 4] <bgcolor=0x0000FF>;
};

FBNFile FBN;
//------------------------------------------------
//--- 010 Editor v11.0.1 Binary Template
//
//      File: AtlusNPCBin.bt
//   Authors: moddaman
//   Version: 1.0
//   Purpose: Parse Field NPC *.bin files.
//  Category: Atlus
// File Mask: 
//  ID Bytes: 
//   History: 
//------------------------------------------------

typedef ubyte u8;
typedef ushort u16;
typedef uint u32;
typedef int s32;

enum<u16> times
{
    EarlyMorning = 1,
    Morning = 2,
    Lunchtime = 3,
    Afternoon = 4,
    AfterSchool = 5,
    Evening = 6,
};

typedef struct calendarGroup
{
    u16 OnMonth <bgcolor=0xFF77FF>;
    u16 OnDay <bgcolor=0xDD55DD>;
    times OnTime <bgcolor=0xFF5555>;
    u16 Field06 <format=hex, bgcolor=0x00FFFF>;
    u32 Field08 <format=hex, bgcolor=0x00FFFF, comment = "Constant 0xFFFFFFFF?">;
    u32 GroupID <comment = "NPC Group to load", bgcolor=0x00FF00>;
    u32 Field10 <format=hex, bgcolor=0x00FFFF>;
    u32 Field14 <format=hex, bgcolor=0x00FFFF>;
    u32 Field18 <format=hex, bgcolor=0x00FFFF>;
    u32 Field1C <format=hex, bgcolor=0x00FFFF>;
};

typedef struct npcGroupSep
{
    u32 Field00;
    u32 Padding[7] <format = hex, comment = "Uncertain">;
};

typedef struct defNPC
{
    u16 NPCID <bgcolor = 0xFFFF00>;
    u16 Field02 <bgcolor = 0x00FFFF>;
    u16 ModelID <comment = "N%05d.RMD", bgcolor = 0x7F55FF>;
    u16 Field06 <bgcolor = 0x00FFFF, comment = "Possibly animation ID to use?">;
    s32 Field08 <format=hex, comment = "Constant value 0xFFFFFFFF?", bgcolor = 0x0000FF>;
    s32 Field0C <bgcolor = 0x0000FF>;
    u16 Field10 <format=hex, bgcolor = 0x0000FF>;
    u16 Field12 <format=hex, bgcolor = 0x0000FF>;
    u32 Field14 <bgcolor = 0x0000FF>;
    u32 Field18 <bgcolor = 0x0000FF>;
    u32 Field1C <bgcolor = 0x0000FF>;
};

u8 foundNPCGroupEnd(int64 fPos)
{
    if (ReadUInt() == 65535 && ReadUInt(fPos + 4) == 0 && ReadUInt(fPos + 8) == 0 && ReadUInt(fPos + 12) == 0)
    {
        return 1;
    }
    return 0;
}

typedef struct npcGroup
{
    while (foundNPCGroupEnd(FTell()) == 0)
    {
        defNPC NPCDef;
    }
    npcGroupSep GroupSep <name = "NPC Group Seperator", bgcolor=0x0000FF>;
};

typedef struct npcGroupArr
{
    while ((FTell() / 64) < (FileSize() / 64))
    {
        npcGroup GroupNPC;
    }
};

typedef struct calendarArr(u32 size)
{
    while (size > 0)
    {
        calendarGroup CalendarGroup <name = "Group">;
        size -= 1;
    }
};

typedef struct npcTblBIN
{
    u32 TotalGroups <bgcolor=0xFF0000>;
    u32 Unknown[7] <format=hex, bgcolor=0x00FFFF, comment = "Possibly padding?">;
    calendarArr LoadDates(TotalGroups) <name = "Calendar Groups", comment = "Changes NPC groups past specified Calendar dates and times">;
    //Printf("There is unknown data from offset 0x%X!", FTell());
    npcGroupArr AllNPC <name = "NPC Groups", comment = "List of NPC groups refrenced by Calendar Groups">;
    // account for potentially awkward files
    if (FTell() < FileSize())
        u32 DupeBytes[(FileSize() - FTell()) / 4] <name = "Unknown Bytes", bgcolor=0x0000FF>;
};

npcTblBIN FILE <name = "NPC Table BIN">;